name: Deploy to AWS using Serverless

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20'

      # Cache node_modules to speed up the installation process
      # - name: Cache Node.js modules
      #   uses: actions/cache@v2
      #   with:
      #     path: node_modules
      #     key: ${{ runner.os }}-node-modules-${{ hashFiles('**/package-lock.json') }}
      #     restore-keys: |
      #       ${{ runner.os }}-node-modules-

      - name: Install dependencies
        run: |
          npm install
          npm install -g serverless  # Install Serverless Framework

      # Cache ESLint and Prettier to speed up linting and formatting
      # - name: Cache ESLint and Prettier
      #   uses: actions/cache@v2
      #   with:
      #     path: ~/.npm
      #     key: ${{ runner.os }}-eslint-prettier-${{ hashFiles('**/package-lock.json') }}
      #     restore-keys: |
      #       ${{ runner.os }}-eslint-prettier-

      # Run ESLint to check code style and fix issues
      - name: Run ESLint
        run: |
          npx eslint . --fix  # The --fix flag attempts to automatically fix lint issues

      # Run Prettier to check code formatting
      - name: Run Prettier
        run: |
          npx prettier --check .  # Checks if the code is correctly formatted
        continue-on-error: true # Prevents failure when Prettier finds formatting issues

      # # Step 4: Run unit tests
      # - name: Run tests
      #   run: npm test

      # Deploy with Serverless Framework
      - name: Deploy with Serverless
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
        run: serverless deploy

      # Notify deployment completion
      - name: Notify Deployment Result
        run: echo "Deployment complete!"
